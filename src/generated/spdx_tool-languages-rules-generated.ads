--  Generated by spdx_tool-genrules.adb
--  SPDX-License-Identifier: Apache-2.0
package SPDX_Tool.Languages.Rules.Generated is

   Definition  : constant Rules_List;

private

   S1 : aliased constant String := ".*pport.h$";
   S2 : aliased constant String := "^--  Advanced Resource Embedder ";
   S3 : aliased constant String := "^/** Begin line maps. **";
   S4 : aliased constant String := "^// Code generated .*";
   S5 : aliased constant String := "^{""version"":\d+,";
   S6 : aliased constant String := "generated code\W{2,3}do not modify";
   S7 : aliased constant String := "# Microsoft Developer Studio Generated Bu"
       & "ild File";
   S8 : aliased constant String := "# This file is automatically generated by"
       & " Racc";
   S9 : aliased constant String := "#include <jni.h>";
   S10 : aliased constant String := "% Generated by roxygen2: do not edit by h"
       & "and";
   S11 : aliased constant String := "/* DO NOT EDIT THIS FILE - it is machine "
       & "generated */";
   S12 : aliased constant String := "/* The following code was generated by JF"
       & "lex ";
   S13 : aliased constant String := "/* generated by jison-lex ";
   S14 : aliased constant String := "/* parser generated by jison ";
   S15 : aliased constant String := "// Generated by the gRPC";
   S16 : aliased constant String := "// This is a generated file. Not intended"
       & " for manual editing.";
   S17 : aliased constant String := "ANTLR";
   S18 : aliased constant String := "Abdanced Resource Embedder";
   S19 : aliased constant String := "Apache Thrift";
   S20 : aliased constant String := "Autogenerated by Thrift Compiler";
   S21 : aliased constant String := "Automatically created by Devel::PPPort";
   S22 : aliased constant String := "Cython";
   S23 : aliased constant String := "Dart";
   S24 : aliased constant String := "GENERATED CODE -- DO NOT EDIT!";
   S25 : aliased constant String := "GFORTRAN module version '";
   S26 : aliased constant String := "GFortran";
   S27 : aliased constant String := "Generated by Cython";
   S28 : aliased constant String := "Generated by Haxe";
   S29 : aliased constant String := "Generated by the protocol buffer compiler"
       & ".  DO NOT EDIT!";
   S30 : aliased constant String := "Go";
   S31 : aliased constant String := "Haxe";
   S32 : aliased constant String := "JFlex";
   S33 : aliased constant String := "Java JNI";
   S34 : aliased constant String := "Javascript Protocol";
   S35 : aliased constant String := "Jison";
   S36 : aliased constant String := "KiCad";
   S37 : aliased constant String := "Minified";
   S38 : aliased constant String := "Minified Map";
   S39 : aliased constant String := "PCBNEW-LibModule-V";
   S40 : aliased constant String := "Perl PPPort";
   S41 : aliased constant String := "Protobuf";
   S42 : aliased constant String := "Protobuf Go";
   S43 : aliased constant String := "Racc";
   S44 : aliased constant String := "Roxygen2";
   S45 : aliased constant String := "This file was autogenerated by go-to-prot"
       & "obuf";
   S46 : aliased constant String := "Unity3D Meta";
   S47 : aliased constant String := "Visual Studio 6";
   S48 : aliased constant String := "fileFormatVersion: ";
   S49 : aliased constant String := "gRPC";
   S50 : aliased constant String := "generated by Xtest";

   Strings : aliased constant String_Array_Access := (
      S1'Access, S2'Access, S3'Access, S4'Access,
      S5'Access, S6'Access, S7'Access, S8'Access,
      S9'Access, S10'Access, S11'Access, S12'Access,
      S13'Access, S14'Access, S15'Access, S16'Access,
      S17'Access, S18'Access, S19'Access, S20'Access,
      S21'Access, S22'Access, S23'Access, S24'Access,
      S25'Access, S26'Access, S27'Access, S28'Access,
      S29'Access, S30'Access, S31'Access, S32'Access,
      S33'Access, S34'Access, S35'Access, S36'Access,
      S37'Access, S38'Access, S39'Access, S40'Access,
      S41'Access, S42'Access, S43'Access, S44'Access,
      S45'Access, S46'Access, S47'Access, S48'Access,
      S49'Access, S50'Access);

   Ext_1 : aliased constant String := ".Rd";
   Ext_2 : aliased constant String := ".adb";
   Ext_3 : aliased constant String := ".ads";
   Ext_4 : aliased constant String := ".c";
   Ext_5 : aliased constant String := ".cc";
   Ext_6 : aliased constant String := ".cpp";
   Ext_7 : aliased constant String := ".cs";
   Ext_8 : aliased constant String := ".css";
   Ext_9 : aliased constant String := ".css.map";
   Ext_10 : aliased constant String := ".dart";
   Ext_11 : aliased constant String := ".dsp";
   Ext_12 : aliased constant String := ".g";
   Ext_13 : aliased constant String := ".go";
   Ext_14 : aliased constant String := ".h";
   Ext_15 : aliased constant String := ".hpp";
   Ext_16 : aliased constant String := ".java";
   Ext_17 : aliased constant String := ".js";
   Ext_18 : aliased constant String := ".js.map";
   Ext_19 : aliased constant String := ".lua";
   Ext_20 : aliased constant String := ".m";
   Ext_21 : aliased constant String := ".meta";
   Ext_22 : aliased constant String := ".mod";
   Ext_23 : aliased constant String := ".php";
   Ext_24 : aliased constant String := ".proto";
   Ext_25 : aliased constant String := ".py";
   Ext_26 : aliased constant String := ".rb";

   Rules : aliased constant Rule_Array := (
      1 => (RULE_CONTAINS, 2, (1, 1), 10, 44),
      2 => (RULE_MATCH, 5, (1, 1), 2, 18),
      3 => (RULE_MATCH, 5, (1, 1), 2, 18),
      4 => (RULE_CONTAINS, 2, (1, 1), 27, 22),
      5 => (RULE_CONTAINS, 2, (1, 4), 29, 41),
      6 => (RULE_CONTAINS, 6, (1, 6), 20, 19),
      7 => (RULE_CONTAINS, 2, (1, 1), 15, 49),
      8 => (RULE_CONTAINS, 2, (1, 4), 29, 41),
      9 => (RULE_CONTAINS, 6, (1, 6), 20, 19),
      10 => (RULE_CONTAINS, 2, (1, 1), 27, 22),
      11 => (RULE_CONTAINS, 2, (1, 1), 15, 49),
      12 => (RULE_CONTAINS, 1, (1, 4), 28, 31),
      13 => (RULE_CONTAINS, 1, (1, 4), 28, 31),
      14 => (RULE_SUCCESS, 1, (0, 0), 0, 37),
      15 => (RULE_MATCH_AND, 0, (0, 0), 5, 38),
      16 => (RULE_MATCH, 0, (0, 0), 3, 38),
      17 => (RULE_MATCH_AND, 0, (0, 0), 5, 38),
      18 => (RULE_MATCH, 0, (0, 0), 3, 38),
      19 => (RULE_MATCH, 2, (1, 1), 6, 23),
      20 => (RULE_CONTAINS, 3, (1, 4), 7, 47),
      21 => (RULE_CONTAINS, 3, (2, 2), 50, 17),
      22 => (RULE_CONTAINS, 6, (1, 6), 20, 19),
      23 => (RULE_MATCH, 2, (1, 41), 4, 30),
      24 => (RULE_CONTAINS, 2, (1, 4), 29, 41),
      25 => (RULE_CONTAINS, 6, (1, 6), 20, 19),
      26 => (RULE_CONTAINS_AND, 2, (1, 1), 11, 33),
      27 => (RULE_CONTAINS, 2, (2, 2), 9, 33),
      28 => (RULE_CONTAINS, 2, (1, 1), 15, 49),
      29 => (RULE_CONTAINS, 1, (1, 4), 28, 31),
      30 => (RULE_SUCCESS, 11, (0, 0), 0, 40),
      31 => (RULE_CONTAINS, 11, (9, 9), 21, 40),
      32 => (RULE_CONTAINS, 2, (1, 1), 15, 49),
      33 => (RULE_CONTAINS, 2, (1, 4), 29, 41),
      34 => (RULE_CONTAINS, 6, (1, 6), 20, 19),
      35 => (RULE_CONTAINS, 2, (1, 1), 12, 32),
      36 => (RULE_CONTAINS, 2, (1, 1), 16, 0),
      37 => (RULE_CONTAINS, 1, (1, 4), 28, 31),
      38 => (RULE_SUCCESS, 1, (0, 0), 0, 37),
      39 => (RULE_CONTAINS, 6, (6, 6), 24, 34),
      40 => (RULE_CONTAINS, 6, (1, 6), 20, 19),
      41 => (RULE_CONTAINS, 2, (1, 1), 14, 35),
      42 => (RULE_CONTAINS, 2, (1, 1), 13, 35),
      43 => (RULE_CONTAINS, 1, (1, 4), 28, 31),
      44 => (RULE_MATCH_AND, 0, (0, 0), 5, 38),
      45 => (RULE_MATCH, 0, (0, 0), 3, 38),
      46 => (RULE_MATCH_AND, 0, (0, 0), 5, 38),
      47 => (RULE_MATCH, 0, (0, 0), 3, 38),
      48 => (RULE_CONTAINS, 1, (1, 4), 28, 31),
      49 => (RULE_CONTAINS, 2, (1, 4), 29, 41),
      50 => (RULE_CONTAINS, 6, (1, 6), 20, 19),
      51 => (RULE_CONTAINS, 2, (1, 1), 48, 46),
      52 => (RULE_CONTAINS, 2, (1, 1), 39, 36),
      53 => (RULE_CONTAINS, 2, (1, 1), 25, 26),
      54 => (RULE_CONTAINS, 2, (1, 4), 29, 41),
      55 => (RULE_CONTAINS, 6, (1, 6), 20, 19),
      56 => (RULE_CONTAINS, 1, (1, 4), 28, 31),
      57 => (RULE_CONTAINS, 2, (1, 21), 45, 42),
      58 => (RULE_CONTAINS, 2, (1, 4), 29, 41),
      59 => (RULE_CONTAINS, 6, (1, 6), 20, 19),
      60 => (RULE_CONTAINS, 1, (1, 4), 28, 31),
      61 => (RULE_CONTAINS, 2, (1, 4), 29, 41),
      62 => (RULE_CONTAINS, 6, (1, 6), 20, 19),
      63 => (RULE_CONTAINS, 3, (3, 3), 8, 43));

   Extensions : aliased constant Extension_Rules_Array := (
      (Ext_1'Access, 1, 1),
      (Ext_2'Access, 2, 2),
      (Ext_3'Access, 3, 3),
      (Ext_4'Access, 4, 4),
      (Ext_5'Access, 5, 7),
      (Ext_6'Access, 8, 12),
      (Ext_7'Access, 13, 13),
      (Ext_8'Access, 14, 14),
      (Ext_9'Access, 15, 18),
      (Ext_10'Access, 19, 19),
      (Ext_11'Access, 20, 20),
      (Ext_12'Access, 21, 21),
      (Ext_13'Access, 22, 23),
      (Ext_14'Access, 24, 31),
      (Ext_15'Access, 32, 32),
      (Ext_16'Access, 33, 37),
      (Ext_17'Access, 38, 43),
      (Ext_18'Access, 44, 47),
      (Ext_19'Access, 48, 48),
      (Ext_20'Access, 49, 50),
      (Ext_21'Access, 51, 51),
      (Ext_22'Access, 52, 53),
      (Ext_23'Access, 54, 56),
      (Ext_24'Access, 57, 57),
      (Ext_25'Access, 58, 60),
      (Ext_26'Access, 61, 63));

   Patterns : aliased Matcher_Array_Access :=
      (null, null, null, null, null, null);

   Definition : constant Rules_List :=
      (Strings    => Strings'Access,
       Extensions => Extensions'Access,
       Rules      => Rules'Access,
       Patterns   => Patterns'Access);

end SPDX_Tool.Languages.Rules.Generated;
